version: "3.3"

services:
  traefik:
    image: "traefik"
    container_name: "traefik"
    restart: unless-stopped
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "8000:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  strodas_service:
    build: ./service
    container_name: stordas_service
    restart: unless-stopped
    depends_on:
      - persistence
    environment:
      PERSISTENCE_PASSWORD: ${DB_PASSWORD}
      PERSISTENCE_USER: ${DB_USER}
      PERSISTENCE_DB: ${DB_DATABASE}
    labels:
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.http.routers.stordas_service.rule=Host(`api.localhost`)"
      - "traefik.http.routers.stordas_service.entrypoints=web"

  persistence:
    image: postgres
    container_name: stordas_persistence
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_DATABASE}

  stordas_client:
    build: ./client
    container_name: stordas_client
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.http.routers.stordas_client.rule=Host(`localhost`)"
      - "traefik.http.routers.stordas_client.entrypoints=web"
